// Generated by CoffeeScript 1.10.0
"use strict";
var ganglere,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ganglere = require('../ganglere');

ganglere.Enemy = (function(superClass) {
  extend(Enemy, superClass);

  Enemy.prototype.ai = null;

  function Enemy(game, x, y) {
    this.move = bind(this.move, this);
    Enemy.__super__.constructor.call(this, game, x, y, game.enemy.sprite);
    this.hp = game.enemy.hp;
    this.damage = game.enemy.damage;
    this.isPlayer = false;
    this.ai = new ganglere.AI(game);
  }

  Enemy.prototype.move = function(player) {
    var deltaX, deltaY;
    deltaX = player.x - this.x;
    deltaY = player.y - this.y;
    if (Math.abs(deltaX) + Math.abs(deltaY) > 6) {
      return this.ai.wander(this);
    } else {
      return this.ai.hunt(this, deltaX, deltaY);
    }
  };

  return Enemy;

})(ganglere.Actor);
