// Generated by CoffeeScript 1.7.1
var Game;

Game = require('./../../game');

Game.EntityMixins.InventoryHolder = {
  name: "InventoryHolder",
  init: function(template) {
    var inventorySlots;
    inventorySlots = template["inventorySlots"] || 10;
    return this._items = new Array(inventorySlots);
  },
  getItems: function() {
    return this._items;
  },
  getItem: function(i) {
    return this._items[i];
  },
  addItem: function(item) {
    var i;
    i = 0;
    while (i < this._items.length) {
      if (!this._items[i]) {
        this._items[i] = item;
        return true;
      }
      i++;
    }
    return false;
  },
  removeItem: function(i) {
    if (this._items[i] && this.hasMixin(Game.EntityMixins.Equipper)) {
      this.unequip(this._items[i]);
    }
    return this._items[i] = null;
  },
  canAddItem: function() {
    var i;
    i = 0;
    while (i < this._items.length) {
      if (!this._items[i]) {
        return true;
      }
      i++;
    }
    return false;
  },
  pickupItems: function(indices) {
    var added, i, mapItems;
    mapItems = this._map.getItemsAt(this.getX(), this.getY(), this.getZ());
    added = 0;
    i = 0;
    while (i < indices.length) {
      if (this.addItem(mapItems[indices[i] - added])) {
        mapItems.splice(indices[i] - added, 1);
        added++;
      } else {
        break;
      }
      i++;
    }
    this._map.setItemsAt(this.getX(), this.getY(), this.getZ(), mapItems);
    return added === indices.length;
  },
  dropItem: function(i) {
    if (this._items[i]) {
      if (this._map) {
        this._map.addItem(this.getX(), this.getY(), this.getZ(), this._items[i]);
      }
      return this.removeItem(i);
    }
  }
};
