// Generated by CoffeeScript 1.7.1
var Game,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Game = require('./../../game');

Game.Map.BossCavern = (function(_super) {
  __extends(BossCavern, _super);

  function BossCavern() {
    BossCavern.__super__.constructor.call(this, this._generateTiles(80, 24));
    this.addEntityAtRandomPosition(Game.EntityRepository.create("giant zombie"), 0);
    return;
  }

  BossCavern.prototype._fillCircle = function(tiles, centerX, centerY, radius, tile) {
    var i, radiusError, x, xChange, y, yChange;
    x = radius;
    y = 0;
    xChange = 1 - (radius << 1);
    yChange = 0;
    radiusError = 0;
    while (x >= y) {
      i = centerX - x;
      while (i <= centerX + x) {
        tiles[i][centerY + y] = tile;
        tiles[i][centerY - y] = tile;
        i++;
      }
      i = centerX - y;
      while (i <= centerX + y) {
        tiles[i][centerY + x] = tile;
        tiles[i][centerY - x] = tile;
        i++;
      }
      y++;
      radiusError += yChange;
      yChange += 2;
      if (((radiusError << 1) + xChange) > 0) {
        x--;
        radiusError += xChange;
        xChange += 2;
      }
    }
  };

  BossCavern.prototype._generateTiles = function(width, height) {
    var centerX, centerY, i, lakes, maxRadius, radius, tiles, x, y;
    tiles = new Array(width);
    x = 0;
    while (x < width) {
      tiles[x] = new Array(height);
      y = 0;
      while (y < height) {
        tiles[x][y] = Game.Tile.wallTile;
        y++;
      }
      x++;
    }
    radius = (Math.min(width, height) - 2) / 2;
    this._fillCircle(tiles, width / 2, height / 2, radius, Game.Tile.floorTile);
    lakes = Math.round(Math.random() * 3) + 3;
    maxRadius = 2;
    i = 0;
    while (i < lakes) {
      centerX = Math.floor(Math.random() * (width - (maxRadius * 2)));
      centerY = Math.floor(Math.random() * (height - (maxRadius * 2)));
      centerX += maxRadius;
      centerY += maxRadius;
      radius = Math.floor(Math.random() * maxRadius) + 1;
      this._fillCircle(tiles, centerX, centerY, radius, Game.Tile.waterTile);
      i++;
    }
    return [tiles];
  };

  BossCavern.prototype.addEntity = function(entity) {
    var position;
    BossCavern.__super__.addEntity.call(this, entity);
    if (this.getPlayer() === entity) {
      position = this.getRandomFloorPosition(0);
      entity.setPosition(position.x, position.y, 0);
      this.getEngine().start();
    }
  };

  return BossCavern;

})(Game.Map);
