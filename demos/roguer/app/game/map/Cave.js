// Generated by CoffeeScript 1.7.1
var Game,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Game = require('./../../game');

Game.Map.Cave = (function(_super) {
  __extends(Cave, _super);

  function Cave(tiles, player) {
    var entity, holePosition, i, level, templates, z;
    Cave.__super__.constructor.call(this, tiles);
    this.addEntityAtRandomPosition(player, 0);
    z = 0;
    while (z < this._depth) {
      i = 0;
      while (i < 15) {
        entity = Game.EntityRepository.createRandom();
        this.addEntityAtRandomPosition(entity, z);
        if (entity.hasMixin("ExperienceGainer")) {
          level = 0;
          while (level < z) {
            entity.giveExperience(entity.getNextLevelExperience() - entity.getExperience());
            level++;
          }
        }
        i++;
      }
      i = 0;
      while (i < 15) {
        this.addItemAtRandomPosition(Game.ItemRepository.createRandom(), z);
        i++;
      }
      z++;
    }
    templates = ["dagger", "sword", "staff", "tunic", "chainmail", "platemail"];
    i = 0;
    while (i < templates.length) {
      this.addItemAtRandomPosition(Game.ItemRepository.create(templates[i]), Math.floor(this._depth * Math.random()));
      i++;
    }
    holePosition = this.getRandomFloorPosition(this._depth - 1);
    this._tiles[this._depth - 1][holePosition.x][holePosition.y] = Game.Tile.holeToCavernTile;
    return;
  }

  return Cave;

})(Game.Map);
