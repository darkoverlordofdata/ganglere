// Generated by CoffeeScript 1.7.1
"use strict";
var ganglere;

ganglere = require('../ganglere');

ganglere.AI = (function() {
  var hunt, reshuffle, wander;

  AI.prototype.game = null;

  reshuffle = [
    {
      x: -1,
      y: 0
    }, {
      x: 1,
      y: 0
    }, {
      x: 0,
      y: -1
    }, {
      x: 0,
      y: 1
    }
  ];

  wander = function() {
    var i, j, t;
    i = reshuffle.length;
    while (--i > 0) {
      j = ~~(Math.random() * (i + 1));
      t = reshuffle[j];
      reshuffle[j] = reshuffle[i];
      reshuffle[i] = t;
    }
    return reshuffle;
  };

  hunt = function(deltaX, deltaY) {
    return [
      {
        x: -1,
        y: 0
      }, {
        x: 1,
        y: 0
      }, {
        x: 0,
        y: -1
      }, {
        x: 0,
        y: 1
      }
    ].map(function(direction) {
      return {
        x: direction.x,
        y: direction.y,
        distance: Math.pow(deltaX + direction.x, 2) + Math.pow(deltaY + direction.y, 2)
      };
    }).sort(function(a, b) {
      return b.distance - a.distance;
    });
  };

  function AI(game) {
    this.game = game;
  }

  AI.prototype.wander = function(actor) {
    var direction, _i, _len, _ref, _results;
    _ref = wander();
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      direction = _ref[_i];
      if (this.game.moveTo(actor, direction)) {
        break;
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  AI.prototype.hunt = function(actor, deltaX, deltaY) {
    var direction, _i, _len, _ref, _results;
    _ref = hunt(deltaX, deltaY);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      direction = _ref[_i];
      if (this.game.moveTo(actor, direction)) {
        break;
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  return AI;

})();
