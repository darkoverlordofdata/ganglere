// Generated by CoffeeScript 1.7.1
"use strict";
var ganglere,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ganglere = require('../ganglere');

ganglere.Initialize = (function(_super) {
  __extends(Initialize, _super);

  function Initialize() {
    return Initialize.__super__.constructor.apply(this, arguments);
  }

  Initialize.score = 0;

  Initialize.music = null;

  Initialize.orientated = false;

  Initialize.prototype.preload = function() {
    this.load.image('splash', 'assets/images/splash.png');
    this.load.image('preloaderBackground', 'assets/images/progress_bar_background.png');
    return this.load.image('preloaderBar', 'assets/images/progress_bar.png');
  };

  Initialize.prototype.create = function() {
    this.input.maxPointers = 1;
    this.stage.disableVisibilityChange = true;
    if (this.game.device.desktop) {
      this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.scale.minWidth = 320;
      this.scale.minHeight = 480;
      this.scale.maxWidth = 640;
      this.scale.maxHeight = 960;
      this.scale.pageAlignHorizontally = true;
      this.scale.pageAlignVertically = true;
      this.scale.setScreenSize(true);
    } else {
      this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.scale.minWidth = 320;
      this.scale.minHeight = 480;
      this.scale.maxWidth = 640;
      this.scale.maxHeight = 960;
      this.scale.pageAlignHorizontally = true;
      this.scale.pageAlignVertically = true;
      this.scale.forceOrientation(false);
      this.scale.hasResized.add(this.gameResized, this);
      this.scale.enterIncorrectOrientation.add(this.enterIncorrectOrientation, this);
      this.scale.leaveIncorrectOrientation.add(this.leaveIncorrectOrientation, this);
      this.scale.setScreenSize(true);
    }
    return this.state.start('Assets', true, false);
  };

  Initialize.prototype.gameResized = function(width, height) {};

  Initialize.prototype.enterIncorrectOrientation = function() {
    Ganglere.orientated = false;
    return document.getElementById('orientation').style.display = 'block';
  };

  Initialize.prototype.leaveIncorrectOrientation = function() {
    Ganglere.orientated = true;
    return document.getElementById('orientation').style.display = 'none';
  };

  return Initialize;

})(Phaser.State);
